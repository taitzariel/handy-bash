#!/usr/bin/env bash

rootdir=`dirname "$(readlink -f "$0")"`
. ${rootdir}/../general/boilerplate.sh

base=mainline
start_pref=begin
username_pref=taitza
remote_repo=share

foreachcmd() {
    local cmds=("$@")
    for cmd in "${cmds[@]}"; do
        echo $cmd
        recursive ${parent_dir} $cmd || echo "failed: $cmd" >&2
    done
}

foreachcmdparallel() {
    local cmds=("$@")
    for cmd in "${cmds[@]}"; do
        echo $cmd
        PARALLEL=true recursive ${parent_dir} $cmd
    done
}

checkout() {
    local checkout_cmds=(
        "git co ${base}"
        "git tag ${start_pref}/${feature}"
        "git branch ${username_pref}/${feature}"
        # don't co -b because want co to succeed even in branch already exists
        "git co ${username_pref}/${feature}"
    )
    local parallel_checkout_cmds=(
        "git push ${remote_repo}"
    )
    foreachcmd "${checkout_cmds[@]}"
    foreachcmdparallel "${parallel_checkout_cmds[@]}"
}

cleanup() {
    local cleanup_cmds=(
      "git co ${base}"
      "git branch -d ${username_pref}/${feature}"
    )
    local parallel_cleanup_cmds=(
        "git push -d ${remote_repo} ${username_pref}/${feature}"
    )
    foreachcmd "${cleanup_cmds[@]}"
    foreachcmdparallel "${parallel_cleanup_cmds[@]}"
}

usage() {
  programname=$(basename $1)
  echo "Usage: $programname create parent_dir branch"
  echo "Usage: $programname delete parent_dir branch"
  echo "  Create or delete branch in each child directory of parent_dir."
}

main() {
  if [ $# == 1 ] && ([[ $1 == "--help" ||  $1 == "-h" ]]); then
    usage $0
    exit 0
  elif [ $# -eq 3 ]; then
    parent_dir=$2
    feature=$3
    if [[ $1 == "create" ]]; then
      checkout "$@"
      exit 0
    elif [[ $1 == "delete" ]]; then
      cleanup "$@"
      exit 0
    fi
  fi
  usage $0
  exit 1
}

main "$@"
